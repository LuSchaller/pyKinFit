[core]

# inherit from the columnflow configuration file
inherit: $CF_BASE/law.cfg


[modules]

columnflow.tasks.cms.inference
columnflow.tasks.cms.external
alljets.tasks


[logging]

law: INFO
luigi-interface: INFO
gfal2: WARNING
columnflow.columnar_util-perf: INFO


[analysis]

default_analysis: alljets.config.analysis_aj.analysis_aj
default_config: run2_2017_nano_v9
default_dataset: tt_fh_powheg

# default_dataset: st_tchannel_t_powheg



# selection is changed from example to new 6 jet selection

production_modules: columnflow.production.{categories,normalization,processes}, columnflow.production.cms.{btag,electron,mc_weight,muon,pdf,pileup,scale,seeds}, alljets.production.example
calibration_modules: columnflow.calibration.cms.{jets,met}, alljets.calibration.example
selection_modules: columnflow.selection.cms.{json_filter, met_filters}, alljets.selection.alljets_selection
ml_modules: columnflow.ml, alljets.ml.example
inference_modules: columnflow.inference, alljets.inference.example

# namespace of all columnflow tasks
cf_task_namespace: cf

# wether or not the ensure_proxy decorator should be skipped, even if used by task's run methods
skip_ensure_proxy: True

# some remote workflow parameter defaults
htcondor_flavor: $CF_HTCONDOR_FLAVOR
htcondor_share_software: False
slurm_flavor: $CF_SLURM_FLAVOR
slurm_partition: $CF_SLURM_PARTITION

# ChunkedIOHandler defaults
chunked_io_chunk_size: 100000
chunked_io_pool_size: 2
chunked_io_debug: False

# csv list of task families that inherit from ChunkedReaderMixin and whose output arrays should be
# checked for non-finite values before saving them to disk (right now, supported tasks are
# cf.CalibrateEvents, cf.SelectEvents, cf.ProduceColumns, cf.PrepareMLEvents, cf.MLEvaluation,
# cf.UniteColumns)
check_finite_output: cf.CalibrateEvents, cf.SelectEvents, cf.ProduceColumns

# whether to log runtimes of array functions by default
log_array_function_runtime: False


[outputs]

# list of all used file systems
wlcg_file_systems: wlcg_fs, wlcg_fs_infn_redirector, wlcg_fs_global_redirector

# list of file systems used by columnflow.tasks.external.GetDatasetLFNs.iter_nano_files to
# look for the correct fs per nano input file (in that order)
lfn_sources: wlcg_fs_infn_redirector, wlcg_fs_global_redirector

# output locations per task family
# for local targets : "local[, LOCAL_FS_NAME or STORE_PATH]"
# for remote targets: "wlcg[, WLCG_FS_NAME]"
# (when WLCG_FS_NAME is empty, the tasks' "default_wlcg_fs" attribute is used)
# examples:
# cf.CalibrateEvents: wlcg
# cf.SelectEvents: local


# Preliminary:

# lfn_sources: local_desy_dcache

# output locations per task family
# for local targets : "local[, STORE_PATH]"
# for remote targets: "wlcg[, WLCG_FS_NAME]"
# cf.BundleRepo: local
# cf.BundleSoftware: local
# cf.BundleBashSandbox: local
# cf.BundleCMSSWSandbox: local
# cf.BundleExternalFiles: local
# GetDatasetLFNs requires a Grid certificate -> use a common space to store the output
# cf.GetDatasetLFNs: local, /nfs/dust/cms/user/jolange/topmass_test/lfn_store
# cf.CalibrateEvents: local
# cf.SelectEvents: local
# cf.CreateCutflowHistograms: local
# cf.PlotCutflow: local
# cf.PlotCutflowVariables: local
# cf.ReduceEvents: local
# cf.MergeReducedEvents: local
# cf.ProduceColumns: local
# cf.PrepareMLEvents: local
# cf.MergeMLEvents: local
# cf.MLTraining: local
# cf.MLEvaluation: local
# cf.CreateHistograms: local
# cf.MergeHistograms: local
# cf.MergeShiftedHistograms: local
# cf.PlotVariables: local
# cf.PlotShiftedVariables: local
# cf.CreateDatacards: local
# cf.MergeReductionStats: local
# cf.MergeSelectionStats: local
# cf.CreatePileupWeights: local

[job]

job_file_dir: $CF_JOB_BASE
job_file_dir_cleanup: False


[local_fs]

base: /


[wlcg_fs]

# set this to your desired location
base: root://eosuser.cern.ch/eos/user/$CF_CERN_USER_FIRSTCHAR/$CF_CERN_USER/$CF_STORE_NAME
create_file_dir: True
use_cache: $CF_WLCG_USE_CACHE
cache_root: $CF_WLCG_CACHE_ROOT
cache_cleanup: $CF_WLCG_CACHE_CLEANUP
cache_max_size: 50GB


[wlcg_fs_infn_redirector]

base: root://xrootd-cms.infn.it/
use_cache: $CF_WLCG_USE_CACHE
cache_root: $CF_WLCG_CACHE_ROOT
cache_cleanup: $CF_WLCG_CACHE_CLEANUP
cache_max_size: 15GB
cache_global_lock: True
cache_mtime_patience: -1


[wlcg_fs_global_redirector]

base: root://cms-xrd-global.cern.ch/
use_cache: $CF_WLCG_USE_CACHE
cache_root: $CF_WLCG_CACHE_ROOT
cache_cleanup: $CF_WLCG_CACHE_CLEANUP
cache_max_size: 15GB
cache_global_lock: True
cache_mtime_patience: -1
